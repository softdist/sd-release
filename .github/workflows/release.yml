name: Build and Release Deno Binaries

on:
  push:
    tags:
      - 'v*'  # Runs only when a version tag is pushed
    branches:
      - main  # Ensures it runs when code is pushed to main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            suffix: linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: windows-amd64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            suffix: windows-arm64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Compile Deno Binaries
        run: |
          deno compile --allow-all --no-check --target=${{ matrix.target }} --output sd-run-${{ matrix.suffix }} ./src/sd-run.ts
          deno compile --allow-all --target=${{ matrix.target }} --output sd-install-${{ matrix.suffix }} ./src/sd-install.ts
          deno compile --allow-all --target=${{ matrix.target }} --output sd-explicate-${{ matrix.suffix }} ./src/sd-explicate.ts

      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: deno-binaries-${{ matrix.suffix }}
          path: |
            sd-run-${{ matrix.suffix }}
            sd-install-${{ matrix.suffix }}
            sd-explicate-${{ matrix.suffix }}
